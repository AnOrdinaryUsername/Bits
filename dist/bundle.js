!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var o,r,u=function(t,e){var n=this;this.isCorrect=function(){return n.calculateAnswer(),n.solution===n.userSolution.grabInput().replace(/\s/g,"")},this.calculateAnswer=function(){n.solution=parseInt(n.randProblem.getQuestion(),16).toString(2)},this.userSolution=t,this.randProblem=e},i=function(){var t=this;this.onSubmit=function(e){document.getElementById("question").addEventListener("submit",(function(n){var o=new u(t,e),r=document.querySelector(".tip");if(null===t.grabInput())return r.textContent="You didn't enter a value! >:(",void n.preventDefault();o.isCorrect()?r.textContent="Woah epic move!":r.textContent="Sadge not right",document.querySelector(".test").textContent=o.solution,document.querySelector(".test2").textContent=o.solution.length.toString(),n.preventDefault()}))},this.grabInput=function(){return document.getElementById("user-input").value}};o=new function(){var t=this;this.getRandomDigit=function(t){return void 0===t&&(t=10),Math.floor(Math.random()*Math.floor(t)).toString(t).toUpperCase()},this.generateProblem=function(e,n){void 0===e&&(e=4),void 0===n&&(n=10);for(var o=0;o<e;++o)t.question+=t.getRandomDigit(n);document.getElementById("problem").textContent=t.question},this.getQuestion=function(){return t.question},this.question=""},r=new i,o.generateProblem(4,16),console.log(o.getQuestion()),r.onSubmit(o)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,